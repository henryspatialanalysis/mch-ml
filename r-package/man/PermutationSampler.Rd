% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PermutationSampler.R
\name{PermutationSampler}
\alias{PermutationSampler}
\title{R6 class used for testing feature importance across many feature permutations}
\description{
R6 class used for testing feature importance across many feature permutations

R6 class used for testing feature importance across many feature permutations
}
\details{
Tests many subsets of features using MarginalImputer until the relative
feature importance converges, as measured by an ImportanceTracker.
}
\seealso{
https://github.com/iancovert/sage/blob/master/sage/permutation_estimator.py
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{imputer}}{Object that can be used to fit models with many feature subsets.
Expects field 'features' and method 'get_loss()'}

\item{\code{num_features}}{(\code{integer(1)}) Maximum number of model features}

\item{\code{importance_tracker}}{Feature importance tracker. Expects field 'importance'
and methods 'update()' and 'converged()'}

\item{\code{permutation_threshold}}{(\code{numeric(1)}) Threshold for unexplained model
performance below which the model has effectively stopped improving. Expressed as
the ratio between current loss minus best loss (numerator) and worst loss minus
best loss (denominator).}

\item{\code{verbose}}{Should permutation sampling yield regular progress messages?}

\item{\code{null_model_loss}}{Loss for a model with no predictive features included}

\item{\code{full_model_loss}}{Loss for the "full" model with all predictive features
included}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PermutationSampler-new}{\code{PermutationSampler$new()}}
\item \href{#method-PermutationSampler-loss_below_threshold}{\code{PermutationSampler$loss_below_threshold()}}
\item \href{#method-PermutationSampler-run_one_permutation}{\code{PermutationSampler$run_one_permutation()}}
\item \href{#method-PermutationSampler-sample}{\code{PermutationSampler$sample()}}
\item \href{#method-PermutationSampler-get_shapley_vals}{\code{PermutationSampler$get_shapley_vals()}}
\item \href{#method-PermutationSampler-clone}{\code{PermutationSampler$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PermutationSampler-new"></a>}}
\if{latex}{\out{\hypertarget{method-PermutationSampler-new}{}}}
\subsection{Method \code{new()}}{
Create a new PermutationSampler object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PermutationSampler$new(
  imputer,
  convergence_threshold = 0.025,
  permutation_threshold = 0.01,
  verbose = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{imputer}}{Object that can be used to fit models with many feature subsets.
Expects field 'features' and method 'get_loss()'}

\item{\code{convergence_threshold}}{(\code{numeric(1)}, default 0.025) Threshold below which
the importance values have effectively converged. Expressed as the ratio between
the largest standard deviation across the importance values (numerator) and the
difference between the highest and lowest importance values (denominator).}

\item{\code{permutation_threshold}}{(\code{numeric(1)}, default 0.01) Threshold for unexplained
model performance below which the model has effectively stopped improving.
Expressed as the ratio between current loss minus best loss (numerator) and worst
loss minus best loss (denominator).}

\item{\code{verbose}}{(\code{boolean(1)}, default FALSE) Should permutation sampling yield
regular progress messages?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PermutationSampler-loss_below_threshold"></a>}}
\if{latex}{\out{\hypertarget{method-PermutationSampler-loss_below_threshold}{}}}
\subsection{Method \code{loss_below_threshold()}}{
Check if a model has effectively minimized loss
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PermutationSampler$loss_below_threshold(loss)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{loss}}{(\code{numeric(1)}) Loss function from a model with a subset of features}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{logical(1)} Is ((loss - best_loss)/(worst_loss - best_loss)) less than
the permutation convergence threshold?
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PermutationSampler-run_one_permutation"></a>}}
\if{latex}{\out{\hypertarget{method-PermutationSampler-run_one_permutation}{}}}
\subsection{Method \code{run_one_permutation()}}{
Get feature importance values for one permutation of features
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PermutationSampler$run_one_permutation(feature_order = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{feature_order}}{(\code{integer(num_features)}, default NULL) the order to add
features}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PermutationSampler-sample"></a>}}
\if{latex}{\out{\hypertarget{method-PermutationSampler-sample}{}}}
\subsection{Method \code{sample()}}{
Sample across many (or all) feature importance permutations until the
importance values are fully described
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PermutationSampler$sample(
  run_all = "detect",
  min_iterations = 100,
  max_iterations = 1e+07
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{run_all}}{(\code{logical(1)} or "detect", default "detect") Should all permutations
of importance values be run rather than sampling from the universe of model
permutations? If "detect", only runs the full set of permutations for models with
7 features or fewer.}

\item{\code{min_iterations}}{(\code{numeric(1)}, default 100) Minimum number of samples to take
before checking for feature importance convergence.}

\item{\code{max_iterations}}{(\code{numeric(1)}, default 1e7) Maximum number of samples to take
before stopping the sampler, even if it has not converged.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PermutationSampler-get_shapley_vals"></a>}}
\if{latex}{\out{\hypertarget{method-PermutationSampler-get_shapley_vals}{}}}
\subsection{Method \code{get_shapley_vals()}}{
get Shapley values for each feature.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PermutationSampler$get_shapley_vals(normalize = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{normalize}}{(\code{logical(1)}, default FALSE) Normalize the feature importance
values to sum to one?}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Numeric vector named with features
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PermutationSampler-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PermutationSampler-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PermutationSampler$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
